<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<variable name="Nimbus_Divider">
		<value>[COLOR accent_color][B]|[/B][/COLOR]</value>
	</variable>

	<!-- <variable name="Flix_Divider">
		<value>[COLOR $VAR[FocusedColorVar]][B]|[/B][/COLOR]</value>
	</variable> -->

	<variable name="Nimbus_Codec_Divider">
		<value condition="!String.IsEmpty(VideoPlayer.AudioChannels)">[COLOR accent_color][B]|[/B][/COLOR]</value>
	</variable>

	<!-- <variable name="WidgetArrows19001">
    <value condition="Integer.IsGreater(Skin.Numeric(TotalWidgetCount),Container(19001).Position) + !String.IsEqual(Container(19001).Position,1)">↕ </value>
    <value condition="Integer.IsGreater(Skin.Numeric(TotalWidgetCount),Container(19001).Position) + String.IsEqual(Container(19001).Position,1)">↓ </value>
    <value condition="!Integer.IsGreater(Skin.Numeric(TotalWidgetCount),Container(19001).Position) + !String.IsEqual(Container(19001).Position,1)">↑ </value>
    <value>none</value>
	</variable>

	<variable name="WidgetNavigationArrows">
    <value condition="String.IsEqual(Skin.String(CurrentContainerID),19001)">$VAR[WidgetArrows19001]</value>
    <value>no_container</value>
	</variable> -->

	<!-- <variable name="WidgetArrows19001">
    <value condition="Integer.IsGreater(Skin.Numeric(TotalWidgetCount),Container(19001).Position) + !String.IsEqual(Container(19001).Position,1)">&#xF53E;</value>
    <value condition="Integer.IsGreater(Skin.Numeric(TotalWidgetCount),Container(19001).Position) + String.IsEqual(Container(19001).Position,1)">&#xF2E0;</value>
    <value condition="!Integer.IsGreater(Skin.Numeric(TotalWidgetCount),Container(19001).Position) + !String.IsEqual(Container(19001).Position,1)">&#xF2EA;</value>
	</variable>

	<variable name="WidgetNavigationArrows">
    <value condition="String.IsEqual(Skin.String(CurrentContainerID),19001)">$VAR[WidgetArrows19001]</value>
    <value></value>
	</variable> -->

	<!-- Return a single genre -->
  <variable name="GenreVar">
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Action)">Action</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Adventure)">Adventure</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Animation)">Animation</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Comedy)">Comedy</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Crime)">Crime</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Documentary)">Documentary</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Drama)">Drama</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Family)">Family</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Fantasy)">Fantasy</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Kids)">Kids</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,History)">History</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Horror)">Horror</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Music)">Music</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Mystery)">Mystery</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,News)">News</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Reality)">Reality</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Romance)">Romance</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Science Fiction)">Sci-Fi</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Sci-Fi)">Sci-Fi</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Soap)">Soap</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Talk)">Talk</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,TV Movie)">TV Movie</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Thriller)">Thriller</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,War)">War</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Western)">Western</value>
	</variable>

	<variable name="StatusVar">
		<value condition="!String.IsEmpty(ListItem.Status) + String.StartsWith(ListItem.Status,Returning)">Returning</value>
		<value>$INFO[Container($PARAM[id]).ListItem.Status]</value>
	</variable>

	<variable name="FlixCrumbsVar">
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur)">$VAR[FlixCrumbs.NoBlur]</value>
    <value>$VAR[FlixCrumbs.Blur]</value>
	</variable>

	<variable name="FlixCrumbs.NoBlur">
		<value condition="$EXP[isEpisode] + ![Control.IsVisible(55) | Control.IsVisible(56)] + !String.StartsWith(Container.PluginCategory,Season) + !String.IsEmpty(ListItem.Genre) + !String.IsEqual(Window(Home).Property(LandscapeWidgetFocused),true)">$INFO[Container($PARAM[list_id]).ListItem.TVShowTitle, [COLOR accent_color][B]|[/B][/COLOR] ]$INFO[Container($PARAM[list_id]).ListItem.Season, [COLOR accent_color][B]|[/B][/COLOR] ]$INFO[Container($PARAM[list_id]).ListItem.Episode,x,]$INFO[Container($PARAM[list_id]).ListItem.Title, [COLOR accent_color][B]|[/B][/COLOR] ]</value>
		<value condition="$EXP[isEpisode] + Control.IsVisible(56) + !String.StartsWith(Container.PluginCategory,Season) + !String.IsEmpty(ListItem.Genre) + !String.IsEqual(Window(Home).Property(LandscapeWidgetFocused),true)">$INFO[Container($PARAM[list_id]).ListItem.TVShowTitle, [COLOR accent_color][B]|[/B][/COLOR] ]$INFO[Container($PARAM[list_id]).ListItem.Season, [COLOR accent_color][B]|[/B][/COLOR] ]$INFO[Container($PARAM[list_id]).ListItem.Episode,x,]</value>
		<value condition="!$EXP[isEpisode] + ![Control.IsVisible(55) | Control.IsVisible(56)] + !String.StartsWith(Container.PluginCategory,Season) + !String.IsEmpty(ListItem.Genre) + !String.IsEqual(Window(Home).Property(LandscapeWidgetFocused),true)">$INFO[ListItem.Title, [COLOR accent_color][B]|[/B][/COLOR] ]</value>
		<value condition="$EXP[isSeason] + !Control.IsVisible(56) + !String.IsEmpty(ListItem.Genre) + [Window.IsVisible(Home) + String.IsEqual(Skin.String(HomeItemArtworkChoice),0) | !Window.IsVisible(Home) + String.IsEqual(Skin.String(ItemFanartChoice.seasons),0)]">$INFO[Container($PARAM[list_id]).ListItem.Season, [COLOR accent_color][B]|[/B][/COLOR] Season ]</value>
    <value condition="$EXP[isTVShow] + !Control.IsVisible(56) + !String.IsEmpty(ListItem.Genre) + [Window.IsVisible(Home) + String.IsEqual(Skin.String(HomeItemArtworkChoice),0) | !Window.IsVisible(Home) + String.IsEqual(Skin.String(ItemFanartChoice.tvshows),0)]">$INFO[ListItem.Title, [COLOR accent_color][B]|[/B][/COLOR] ]</value>
    <value condition="$EXP[isMovie] + !Control.IsVisible(56) + !String.IsEmpty(ListItem.Genre) + [Window.IsVisible(Home) + String.IsEqual(Skin.String(HomeItemArtworkChoice),0) | !Window.IsVisible(Home) + String.IsEqual(Skin.String(ItemFanartChoice.movies),0)]">$INFO[ListItem.Title, [COLOR accent_color][B]|[/B][/COLOR] ]</value>
		<!-- <value condition="$EXP[isMovie] + String.IsEmpty(ListItem.Genre)">$INFO[Container($PARAM[list_id]).ListItem.Label, [B]|[/B] ]</value> -->
	</variable>

	<variable name="FlixCrumbs.Blur">
		<value condition="$EXP[isEpisode] + ![Control.IsVisible(55) | Control.IsVisible(56)] + !String.StartsWith(Container.PluginCategory,Season) + !String.IsEmpty(ListItem.Genre) + !String.IsEqual(Window(Home).Property(LandscapeWidgetFocused),true)">$INFO[Container($PARAM[list_id]).ListItem.TVShowTitle, [COLOR unfocused_text][B]|[/B][/COLOR] ]$INFO[Container($PARAM[list_id]).ListItem.Season, [COLOR unfocused_text][B]|[/B][/COLOR] ]$INFO[Container($PARAM[list_id]).ListItem.Episode,x,]$INFO[Container($PARAM[list_id]).ListItem.Title, [COLOR unfocused_text][B]|[/B][/COLOR] ]</value>
		<value condition="$EXP[isEpisode] + Control.IsVisible(56) + !String.StartsWith(Container.PluginCategory,Season) + !String.IsEmpty(ListItem.Genre) + !String.IsEqual(Window(Home).Property(LandscapeWidgetFocused),true)">$INFO[Container($PARAM[list_id]).ListItem.TVShowTitle, [COLOR unfocused_text][B]|[/B][/COLOR] ]$INFO[Container($PARAM[list_id]).ListItem.Season, [COLOR unfocused_text][B]|[/B][/COLOR] ]$INFO[Container($PARAM[list_id]).ListItem.Episode,x,]</value>
		<value condition="!$EXP[isEpisode] + ![Control.IsVisible(55) | Control.IsVisible(56)] + !String.StartsWith(Container.PluginCategory,Season) + !String.IsEmpty(ListItem.Genre) + !String.IsEqual(Window(Home).Property(LandscapeWidgetFocused),true)">$INFO[ListItem.Title, [COLOR unfocused_text][B]|[/B][/COLOR] ]</value>
		<value condition="$EXP[isSeason] + !Control.IsVisible(56) + !String.IsEmpty(ListItem.Genre) + [Window.IsVisible(Home) + String.IsEqual(Skin.String(HomeItemArtworkChoice),0) | !Window.IsVisible(Home) + String.IsEqual(Skin.String(ItemFanartChoice.seasons),0)]">$INFO[Container($PARAM[list_id]).ListItem.Season, [COLOR unfocused_text][B]|[/B][/COLOR] Season ]</value>
    <value condition="$EXP[isTVShow] + !Control.IsVisible(56) + !String.IsEmpty(ListItem.Genre) + [Window.IsVisible(Home) + String.IsEqual(Skin.String(HomeItemArtworkChoice),0) | !Window.IsVisible(Home) + String.IsEqual(Skin.String(ItemFanartChoice.tvshows),0)]">$INFO[ListItem.Title, [COLOR unfocused_text][B]|[/B][/COLOR] ]</value>
    <value condition="$EXP[isMovie] + !Control.IsVisible(56) + !String.IsEmpty(ListItem.Genre) + [Window.IsVisible(Home) + String.IsEqual(Skin.String(HomeItemArtworkChoice),0) | !Window.IsVisible(Home) + String.IsEqual(Skin.String(ItemFanartChoice.movies),0)]">$INFO[ListItem.Title, [COLOR unfocused_text][B]|[/B][/COLOR] ]</value>
		<!-- <value condition="$EXP[isMovie] + String.IsEmpty(ListItem.Genre)">$INFO[Container($PARAM[list_id]).ListItem.Label, [B]|[/B] ]</value> -->
	</variable>

	<variable name="FlixCategory">
		<value condition="!Skin.HasSetting(Enable.BackgroundBlur)">$VAR[FlixCategory.NoBlur]</value>
    <value>$VAR[FlixCategory.Blur]</value>
	</variable>

	<variable name="FlixCategory.NoBlur">
		<value condition="!String.StartsWith(Container.PluginCategory,Season)">$INFO[Container.PluginCategory, [COLOR accent_color][B]»[/B][/COLOR] ]</value>
		<value condition="String.StartsWith(Container.PluginCategory,Season)">$INFO[Container($PARAM[list_id]).ListItem.TVShowTitle, [COLOR accent_color][B]»[/B][/COLOR] ]</value>
	</variable>

	<variable name="FlixCategory.Blur">
		<value condition="!String.StartsWith(Container.PluginCategory,Season)">$INFO[Container.PluginCategory, [COLOR unfocused_text][B]»[/B][/COLOR] ]</value>
		<value condition="String.StartsWith(Container.PluginCategory,Season)">$INFO[Container($PARAM[list_id]).ListItem.TVShowTitle, [COLOR unfocused_text][B]»[/B][/COLOR] ]</value>
	</variable>

	<variable name="SubstituteLabel">
    <value condition="$EXP[isMovie] | $EXP[isTVShow] | $EXP[isSeason] | Container.Content(addons)">$INFO[ListItem.Label]</value>
    <value condition="$EXP[isEpisode]">$INFO[ListItem.TVshowTitle]</value>
	</variable>

	<variable name="DialogInfoTitle">
		<value condition="$EXP[isEpisode]">$INFO[ListItem.TVShowTitle,,[CR]][LIGHT]$INFO[ListItem.Season,S,: ]$INFO[ListItem.Episode,E, ]$INFO[ListItem.Title][/LIGHT]</value>
		<value>$INFO[ListItem.Title]</value>
	</variable>

	<variable name="HomescreenFlixCrumbs">
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur)">$VAR[HomescreenFlixCrumbs.NoBlur]</value>
    <value>$VAR[HomescreenFlixCrumbs.Blur]</value>
	</variable>

	<variable name="HomescreenFlixCrumbs.NoBlur">
    <value condition="Window.IsActive(Home) + !Control.HasFocus(14100)">$VAR[TrailerReadyVar]$VAR[ClockCrumbs]$INFO[Container(9000).ListItem.Label] [COLOR accent_color][B]»[/B][/COLOR] </value>
		<value condition="Window.IsActive(Home) + Control.HasFocus(14100)">$VAR[ClockCrumbs]$INFO[Container(9000).ListItem.Label]</value>
	</variable>

	<variable name="HomescreenFlixCrumbs.Blur">
    <value condition="Window.IsActive(Home) + !Control.HasFocus(14100)">$VAR[TrailerReadyVar]$VAR[ClockCrumbs]$INFO[Container(9000).ListItem.Label] [COLOR unfocused_text][B]»[/B][/COLOR] </value>
		<value condition="Window.IsActive(Home) + Control.HasFocus(14100)">$VAR[ClockCrumbs]$INFO[Container(9000).ListItem.Label]</value>
	</variable>

	<variable name="TrailerReadyVar">
		<value condition="!Skin.HasSetting(Enable.BackgroundBlur)">$VAR[TrailerReady.NoBlur]</value>
    <value>$VAR[TrailerReady.Blur]</value>
	</variable>

	<variable name="TrailerReady.NoBlur">
    <value condition="String.IsEqual(Skin.String(trailerSetting),1) + ![$EXP[isEpisode] | $EXP[isSeason]] + Skin.HasSetting(Enable.TrailerReadyIcon) + !String.IsEmpty(Window.Property(nimbus.trailer_ready))">[COLOR accent_color]▶[/COLOR] </value>
	</variable>

	<variable name="TrailerReady.Blur">
    <value condition="String.IsEqual(Skin.String(trailerSetting),1) + ![$EXP[isEpisode] | $EXP[isSeason]] + Skin.HasSetting(Enable.TrailerReadyIcon) + !String.IsEmpty(Window.Property(nimbus.trailer_ready))">[COLOR unfocused_text]▶[/COLOR] </value>
	</variable>

	<variable name="SearchFlixCrumbs">
    <value condition="Window.IsActive(1121)">$VAR[TrailerReadyVar]$VAR[ClockCrumbs]</value>
	</variable>

	<variable name="ClockCrumbs">
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur)">$VAR[ClockCrumbs.NoBlur]</value>
    <value>$VAR[ClockCrumbs.Blur]</value>
	</variable>

	<variable name="ClockCrumbs.NoBlur">
    <value condition="Skin.HasSetting(Enable.ClockCrumbs) + !Container.Content(favourites)">$INFO[System.Time] [COLOR accent_color]•[/COLOR] </value>
    <value condition="Skin.HasSetting(Enable.ClockCrumbs) + Container.Content(favourites)">$INFO[System.Time] [COLOR accent_color]•[/COLOR] Favorites</value>
	</variable>

	<variable name="ClockCrumbs.Blur">
    <value condition="Skin.HasSetting(Enable.ClockCrumbs) + !Container.Content(favourites)">$INFO[System.Time] [COLOR unfocused_text]•[/COLOR] </value>
    <value condition="Skin.HasSetting(Enable.ClockCrumbs) + Container.Content(favourites)">$INFO[System.Time] [COLOR unfocused_text]•[/COLOR] Favorites</value>
	</variable>

	<variable name="DefaultSearchWindowBehaviorVar">
    <value condition="Skin.HasSetting(DefaultSearchWindowBehavior)">Open keyboard</value>
    <value>Open search window</value>
	</variable>

	<variable name="OneClickCloseVar">
    <value condition="Skin.HasSetting(OneClickClose)">Exit</value>
    <value>Open shutdown menu</value>
	</variable>

	<!-- <variable name="LoadingLabelsVar">
    <value condition="Container.IsUpdating + Window.IsActive(home) + String.IsEmpty(Skin.String(TrailerPlaying))">Loading widgets...</value>
    <value condition="Container.IsUpdating + Window.IsActive(1121) + String.IsEmpty(Skin.String(TrailerPlaying))">Loading search results...</value>
	</variable> -->

	<!-- <variable name="FocusedChoiceColorVar">
    <value condition="![Window.IsVisible(1100) | Skin.HasSetting(Disable.ColorThemeFocus)]">accent_color</value>
    <value condition="Window.IsVisible(1100)">accent_color</value>
    <value>FFCCCCCC</value>
    <value>FFEAECED</value>
    <value>FFC1C1C1</value>
	</variable> -->

	<variable name="EPGUnfocusedColorVar">
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur)">primary_background</value>
    <value>dialog_bg</value>
	</variable>

	<variable name="FocusedColorVar">
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur)">button_focus</value>
    <value>FFD9D9D9</value>
	</variable>

	<variable name="FocusedTextColorVar">
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur)">focused_text</value>
    <value>FF141515</value>
	</variable>

	<variable name="MenuSelectorColor">
    <value condition="!Player.HasMedia + !Skin.HasSetting(Enable.BackgroundBlur)">accent_color</value>
    <value condition="!Player.HasMedia">$INFO[Window(home).Property(listitem_color)]</value>
    <value>FFD9D9D9</value>
	</variable>

	<!-- <variable name="ListLandscapeDiffuseColor">
    <value condition="[Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">FFE9E9E9</value>
    <value>FFBFBFBF</value>
	</variable> -->

	<variable name="MediaMenuDiffuse">
    <!-- Blur enabled -->
    <value condition="Skin.HasSetting(Enable.BackgroundBlur)">80000000</value>
    <!-- Movies -->
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur) + Container.Content(movies) + String.IsEqual(Skin.String(ArtworkChoice.movies),1)">80050505</value>
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur) + Container.Content(movies) + String.IsEqual(Skin.String(ArtworkChoice.movies),0)">FF101010</value>
    <!-- TV Shows -->
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur) + Container.Content(tvshows) + String.IsEqual(Skin.String(ArtworkChoice.tvshows),1)">80050505</value>
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur) + Container.Content(tvshows) + String.IsEqual(Skin.String(ArtworkChoice.tvshows),0)">FF101010</value>
    <!-- Seasons -->
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur) + Container.Content(seasons) + String.IsEqual(Skin.String(ArtworkChoice.seasons),1)">80050505</value>
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur) + Container.Content(seasons) + String.IsEqual(Skin.String(ArtworkChoice.seasons),0)">FF101010</value>
    <!-- Episodes -->
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur) + Container.Content(episodes) + String.IsEqual(Skin.String(ArtworkChoice.episodes),1)">80050505</value>
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur) + Container.Content(episodes) + String.IsEqual(Skin.String(ArtworkChoice.episodes),0)">FF101010</value>
    <!-- Non-content -->
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur) + String.IsEqual(Skin.String(HomeArtworkChoice),1) + ![Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">80050505</value>
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur) + String.IsEqual(Skin.String(HomeArtworkChoice),0) + ![Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">FF101010</value>
</variable>

	<variable name="MainMenuDiffuse">
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur) + String.IsEqual(Skin.String(HomeArtworkChoice),1)">80050505</value>
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur) + String.IsEqual(Skin.String(HomeArtworkChoice),0)">FF101010</value>
    <value>80000000</value>
    <!-- <value>660a0a0a</value> -->
	</variable>

	<variable name="BorderColorVar">
		<value condition="!Skin.HasSetting(Enable.BackgroundBlur)">FF2E2E2E</value>
		<value>FF5B5B5B</value>
		<!-- <value>FF252525</value> -->
	</variable>

	<variable name="HomeMenuWeatherVar">
		<value condition="Weather.IsFetched">$INFO[System.Date(DDD)] [LIGHT]•[/LIGHT] $INFO[Weather.Temperature]</value>
		<value>$INFO[System.Date(DDD)] [LIGHT]•[/LIGHT] $INFO[System.Date(mmm d)], $INFO[System.Date(yyyy)]</value>
		<!-- <value>FF252525</value> -->
	</variable>

	<variable name="EditMainMenusVar">
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),movies)">RunScript(script.nimbus.helper,mode=manage_main_menu_path&amp;cpath_setting=movie.main_menu)</value>
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),tvshows)">RunScript(script.nimbus.helper,mode=manage_main_menu_path&amp;cpath_setting=tvshow.main_menu)</value>
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),custom1)">RunScript(script.nimbus.helper,mode=manage_main_menu_path&amp;cpath_setting=custom1.main_menu)</value>
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),custom2)">RunScript(script.nimbus.helper,mode=manage_main_menu_path&amp;cpath_setting=custom2.main_menu)</value>
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),custom3)">RunScript(script.nimbus.helper,mode=manage_main_menu_path&amp;cpath_setting=custom3.main_menu)</value>
	</variable>

	<variable name="EditWidgetsVar">
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),movies)">RunScript(script.nimbus.helper,mode=manage_widgets&amp;cpath_setting=movie.widget)</value>
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),tvshows)">RunScript(script.nimbus.helper,mode=manage_widgets&amp;cpath_setting=tvshow.widget)</value>
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),custom1)">RunScript(script.nimbus.helper,mode=manage_widgets&amp;cpath_setting=custom1.widget)</value>
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),custom2)">RunScript(script.nimbus.helper,mode=manage_widgets&amp;cpath_setting=custom2.widget)</value>
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),custom3)">RunScript(script.nimbus.helper,mode=manage_widgets&amp;cpath_setting=custom3.widget)</value>
	</variable>
	
	<variable name="TitleSettingVar">
    <value condition="String.IsEqual(Skin.String(titleSetting),0)">Default</value>
    <value condition="String.IsEqual(Skin.String(titleSetting),1)">Engebrechtre</value>
    <value condition="String.IsEqual(Skin.String(titleSetting),2)">Westmeath</value>
	</variable>

	<variable name="TitleSettingToggleVar">
		<value condition="String.IsEqual(Skin.String(titleSetting),0)">Skin.SetString(titleSetting,1)</value>
		<value condition="String.IsEqual(Skin.String(titleSetting),1)">Skin.SetString(titleSetting,2)</value>
		<value condition="String.IsEqual(Skin.String(titleSetting),2)">Skin.SetString(titleSetting,0)</value>
		<value>Skin.SetString(titleSetting,0)</value>
	</variable>

	<variable name="OnBackSettingVar">
    <value condition="String.IsEqual(Skin.String(onBackSetting),0)">Open main menu</value>
    <value condition="String.IsEqual(Skin.String(onBackSetting),1)">Reset widget</value>
	</variable>

	<variable name="OnBackSettingToggleVar">
    <value condition="String.IsEqual(Skin.String(onBackSetting),0) + String.IsEqual(Skin.String(onLeftSetting),0)">Skin.SetString(onBackSetting,1)</value>
    <value condition="String.IsEqual(Skin.String(onBackSetting),1)">Skin.SetString(onBackSetting,0)</value>
	</variable>

	<variable name="OnLeftSettingVar">
    <value condition="String.IsEqual(Skin.String(onLeftSetting),0)">Open main menu</value>
    <value condition="String.IsEqual(Skin.String(onLeftSetting),1)">Wrap to end</value>
	</variable>

	<variable name="OnLeftSettingToggleVar">
    <value condition="String.IsEqual(Skin.String(onLeftSetting),0) + String.IsEqual(Skin.String(onBackSetting),0)">Skin.SetString(onLeftSetting,1)</value>
    <value condition="String.IsEqual(Skin.String(onLeftSetting),1)">Skin.SetString(onLeftSetting,0)</value>
	</variable>

	<variable name="OSDAudioButtonSettingVar">
    <value condition="String.IsEqual(Skin.String(OSDAudioButtonSetting),0)">Next audio track</value>
    <value condition="String.IsEqual(Skin.String(OSDAudioButtonSetting),1)">Open audio settings</value>
	</variable>

	<variable name="OSDAudioButtonSettingToggleVar">
    <value condition="String.IsEqual(Skin.String(OSDAudioButtonSetting),0)">Skin.SetString(OSDAudioButtonSetting,1)</value>
    <value condition="String.IsEqual(Skin.String(OSDAudioButtonSetting),1)">Skin.SetString(OSDAudioButtonSetting,0)</value>
	</variable>

	<variable name="OSDSubtitleButtonSettingVar">
    <value condition="String.IsEqual(Skin.String(OSDSubtitleButtonSetting),0)">Next subtitle</value>
    <value condition="String.IsEqual(Skin.String(OSDSubtitleButtonSetting),1)">Open subtitle settings</value>
	</variable>

	<variable name="OSDSubtitleButtonSettingToggleVar">
    <value condition="String.IsEqual(Skin.String(OSDSubtitleButtonSetting),0)">Skin.SetString(OSDSubtitleButtonSetting,1)</value>
    <value condition="String.IsEqual(Skin.String(OSDSubtitleButtonSetting),1)">Skin.SetString(OSDSubtitleButtonSetting,0)</value>
	</variable>

	<!-- <variable name="FocusOptionSettingVar">
    <value condition="String.IsEqual(Skin.String(FocusOptionSetting),0)">Frame</value>
    <value condition="String.IsEqual(Skin.String(FocusOptionSetting),1)">Selector</value>
	</variable>

	<variable name="FocusOptionSettingToggleVar">
    <value condition="String.IsEqual(Skin.String(FocusOptionSetting),0)">Skin.SetString(FocusOptionSetting,1)</value>
    <value condition="String.IsEqual(Skin.String(FocusOptionSetting),1)">Skin.SetString(FocusOptionSetting,0)</value>
	</variable> -->

	<variable name="ContextMenuTitleVar">
		<value condition="!Skin.HasSetting(Enable.BackgroundBlur)">$VAR[ContextMenuTitle.NoBlur]</value>
		<value>$VAR[ContextMenuTitle.Blur]</value>
	</variable>

	<variable name="ContextMenuTitle.NoBlur">
		<value condition="$EXP[isMovie] | $EXP[isTVShow]">$INFO[ListItem.Title]</value>
		<value condition="$EXP[isSeason]">$INFO[ListItem.TVShowTitle] [COLOR accent_color]|[/COLOR] $INFO[ListItem.Title]</value>
		<value condition="$EXP[isEpisode]">$INFO[ListItem.TVShowTitle] [COLOR accent_color]|[/COLOR] S$INFO[ListItem.Season] E$INFO[ListItem.Episode]</value>
		<value>Context menu</value>
	</variable>
	
	<variable name="ContextMenuTitle.Blur">
		<value condition="$EXP[isMovie] | $EXP[isTVShow]">$INFO[ListItem.Title]</value>
		<value condition="$EXP[isSeason]">$INFO[ListItem.TVShowTitle] [COLOR unfocused_text]|[/COLOR] $INFO[ListItem.Title]</value>
		<value condition="$EXP[isEpisode]">$INFO[ListItem.TVShowTitle] [COLOR unfocused_text]|[/COLOR] S$INFO[ListItem.Season] E$INFO[ListItem.Episode]</value>
		<value>Context menu</value>
	</variable>

	<variable name="AddonsTitleVar">
		<value condition="!String.IsEqual(ListItem.FolderPath,addons://outdated/)">$INFO[ListItem.Label]</value>
		<value condition="String.IsEqual(ListItem.FolderPath,addons://outdated/)">$INFO[ListItem.Label] ($INFO[System.AddonUpdateCount])</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>

	<variable name="ContentTypeLabel">
		<value condition="Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)"> for episode lists</value>
    <value condition="Container.Content(episodes) + String.StartsWith(Container.PluginCategory,Season)"> for episodes</value>
    <value condition="!Container.Content()"> for $INFO[Container.Content]</value>
    <value condition="Container.Content()"> for menus</value>
    <value>$LOCALIZE[14018]</value>
	</variable>

	<variable name="ListLandscapeHeaderVar">
    <value condition="$EXP[isPlugin]">$VAR[TrailerReadyVar]$VAR[ClockCrumbs]$VAR[BreadcrumbsVideoVar]$VAR[FlixCategory]</value>
    <value condition="!$EXP[isPlugin]">$VAR[ClockCrumbs]$INFO[Container.FolderName]</value>
	</variable>

	<variable name="ForcedViewLabel">
		<value condition="[Container.Content() + !String.IsEmpty(Skin.String(Skin.ForcedView.))]">[B]$INFO[Skin.String(Skin.ForcedView.)][/B]</value>
		<value condition="[Container.Content(tags) + !String.IsEmpty(Skin.String(Skin.ForcedView.tags))]">[B]$INFO[Skin.String(Skin.ForcedView.tags)][/B]</value>
		<value condition="[Container.Content(years) + !String.IsEmpty(Skin.String(Skin.ForcedView.years))]">[B]$INFO[Skin.String(Skin.ForcedView.years)][/B]</value>
		<value condition="[Container.Content(genres) + !String.IsEmpty(Skin.String(Skin.ForcedView.genres))]">[B]$INFO[Skin.String(Skin.ForcedView.genres)][/B]</value>
		<value condition="[Container.Content(countries) + !String.IsEmpty(Skin.String(Skin.ForcedView.countries))]">[B]$INFO[Skin.String(Skin.ForcedView.countries)][/B]</value>
		<value condition="[Container.Content(studios) + !String.IsEmpty(Skin.String(Skin.ForcedView.studios))]">[B]$INFO[Skin.String(Skin.ForcedView.studios)][/B]</value>
		<value condition="[Container.Content(playlists) + !String.IsEmpty(Skin.String(Skin.ForcedView.playlists))]">[B]$INFO[Skin.String(Skin.ForcedView.playlists)][/B]</value>
		<value condition="[Container.Content(movies) + !String.IsEmpty(Skin.String(Skin.ForcedView.movies))]">[B]$INFO[Skin.String(Skin.ForcedView.movies)][/B]</value>
		<value condition="[Container.Content(sets) + !String.IsEmpty(Skin.String(Skin.ForcedView.sets))]">[B]$INFO[Skin.String(Skin.ForcedView.sets)][/B]</value>
		<value condition="[Container.Content(tvshows) + !String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]">[B]$INFO[Skin.String(Skin.ForcedView.tvshows)][/B]</value>
		<value condition="[Container.Content(seasons) + !String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]">[B]$INFO[Skin.String(Skin.ForcedView.seasons)][/B]</value>
		<value condition="[Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season) + !String.IsEmpty(Skin.String(Skin.ForcedView.episodes.outside))]">[B]$INFO[Skin.String(Skin.ForcedView.episodes.outside)][/B]</value>
		<value condition="[Container.Content(episodes) + String.StartsWith(Container.PluginCategory,Season) + !String.IsEmpty(Skin.String(Skin.ForcedView.episodes.inside))]">[B]$INFO[Skin.String(Skin.ForcedView.episodes.inside)][/B]</value>
		<value condition="[Container.Content(artists) + !String.IsEmpty(Skin.String(Skin.ForcedView.artists))]">[B]$INFO[Skin.String(Skin.ForcedView.artists)][/B]</value>
		<value condition="[Container.Content(albums) + !String.IsEmpty(Skin.String(Skin.ForcedView.albums))]">[B]$INFO[Skin.String(Skin.ForcedView.albums)][/B]</value>
		<value condition="[Container.Content(songs) + !String.IsEmpty(Skin.String(Skin.ForcedView.songs))]">[B]$INFO[Skin.String(Skin.ForcedView.songs)][/B]</value>
		<value condition="[Container.Content(musicvideos) + !String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]">[B]$INFO[Skin.String(Skin.ForcedView.musicvideos)][/B]</value>
		<value condition="[Container.Content(addons) + !String.IsEmpty(Skin.String(Skin.ForcedView.addons))]">[B]$INFO[Skin.String(Skin.ForcedView.addons)][/B]</value>
		<value condition="[Container.Content(actors) + !String.IsEmpty(Skin.String(Skin.ForcedView.actors))]">[B]$INFO[Skin.String(Skin.ForcedView.actors)][/B]</value>
		<value condition="[Container.Content(directors) + !String.IsEmpty(Skin.String(Skin.ForcedView.directors))]">[B]$INFO[Skin.String(Skin.ForcedView.directors)][/B]</value>
		<value condition="[Container.Content(files) + !String.IsEmpty(Skin.String(Skin.ForcedView.files))]">[B]$INFO[Skin.String(Skin.ForcedView.files)][/B]</value>
		<value condition="[Container.Content(mixed) + !String.IsEmpty(Skin.String(Skin.ForcedView.mixed))]">[B]$INFO[Skin.String(Skin.ForcedView.mixed)][/B]</value>
		<value condition="[Container.Content(images) + !String.IsEmpty(Skin.String(Skin.ForcedView.images))]">[B]$INFO[Skin.String(Skin.ForcedView.images)][/B]</value>
		<value condition="[Container.Content(games) + !String.IsEmpty(Skin.String(Skin.ForcedView.games))]">[B]$INFO[Skin.String(Skin.ForcedView.games)][/B]</value>
		<value condition="[Container.Content(favourites) + !String.IsEmpty(Skin.String(Skin.ForcedView.favourites))]">[B]$INFO[Skin.String(Skin.ForcedView.favourites)][/B]</value>
		<value condition="[Container.Content(unknown) + !String.IsEmpty(Skin.String(Skin.ForcedView.unknown))]">[B]$INFO[Skin.String(Skin.ForcedView.unknown)][/B]</value>
		<value condition="[Container.Content(videos) + !String.IsEmpty(Skin.String(Skin.ForcedView.videos))]">[B]$INFO[Skin.String(Skin.ForcedView.videos)][/B]</value>
		<value>$INFO[Container.Viewmode]</value>
	</variable>	

	<variable name="APIKeyLabel">
    <value condition="String.IsEqual(Skin.String(checking_api_key),true)">Checking API Key...</value>
    <value condition="String.IsEqual(Skin.String(valid_api_key),true)">*************************</value>
    <value condition="Skin.HasSetting(Enable.BackgroundBlur) + String.IsEmpty(Skin.String(valid_api_key)) + !String.IsEmpty(Skin.String(mdblist_api_key))">[COLOR red]INVALID API KEY[/COLOR]</value>
    <value condition="!Skin.HasSetting(Enable.BackgroundBlur) + String.IsEmpty(Skin.String(valid_api_key)) + !String.IsEmpty(Skin.String(mdblist_api_key))">INVALID API KEY</value>
    <value condition="String.IsEmpty(Skin.String(mdblist_api_key))">Enter key</value>
	</variable>

</includes>